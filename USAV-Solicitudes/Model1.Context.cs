//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USAV_Solicitudes
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDVideosUSAVEntitiesModelSolicitudes : DbContext
    {
        public BDVideosUSAVEntitiesModelSolicitudes()
            : base("name=BDVideosUSAVEntitiesModelSolicitudes")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CatEdificios> CatEdificios { get; set; }
        public virtual DbSet<CatLocalidades> CatLocalidades { get; set; }
        public virtual DbSet<CatTipoBloques> CatTipoBloques { get; set; }
        public virtual DbSet<CatTipoReserva> CatTipoReserva { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TblArticulos> TblArticulos { get; set; }
        public virtual DbSet<TblAuditoria> TblAuditoria { get; set; }
        public virtual DbSet<TblBloqueCurso> TblBloqueCurso { get; set; }
        public virtual DbSet<TblCalendario> TblCalendario { get; set; }
        public virtual DbSet<TblCategoriaCurso> TblCategoriaCurso { get; set; }
        public virtual DbSet<TblCategorias> TblCategorias { get; set; }
        public virtual DbSet<TblCategoriasArticulos> TblCategoriasArticulos { get; set; }
        public virtual DbSet<TblComentarios> TblComentarios { get; set; }
        public virtual DbSet<TblConfiguraciones> TblConfiguraciones { get; set; }
        public virtual DbSet<TblConfiguracionLaboral> TblConfiguracionLaboral { get; set; }
        public virtual DbSet<TblCreadorVideos> TblCreadorVideos { get; set; }
        public virtual DbSet<TblCurso> TblCurso { get; set; }
        public virtual DbSet<TblMatriculadosCursos> TblMatriculadosCursos { get; set; }
        public virtual DbSet<TblNivelCurso> TblNivelCurso { get; set; }
        public virtual DbSet<TblReservaLocalidad> TblReservaLocalidad { get; set; }
        public virtual DbSet<TblReservas> TblReservas { get; set; }
        public virtual DbSet<TblRolUsuario> TblRolUsuario { get; set; }
        public virtual DbSet<TblSubCategorias> TblSubCategorias { get; set; }
        public virtual DbSet<TblTiposVideos> TblTiposVideos { get; set; }
        public virtual DbSet<TblUsuario> TblUsuario { get; set; }
        public virtual DbSet<TblVideos> TblVideos { get; set; }
        public virtual DbSet<TblVisitas> TblVisitas { get; set; }
        public virtual DbSet<VIEW_ESTADISTICAS_TIPORESERVACION> VIEW_ESTADISTICAS_TIPORESERVACION { get; set; }
        public virtual DbSet<ViewReservasLoc> ViewReservasLoc { get; set; }
        public virtual DbSet<VistaCursosCreados> VistaCursosCreados { get; set; }
        public virtual DbSet<VistaLocalidadCalendario> VistaLocalidadCalendario { get; set; }
        public virtual DbSet<VistaReporteVideos> VistaReporteVideos { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> usp_Crearcalendario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Crearcalendario");
        }
    
        public virtual ObjectResult<string> USP_CrearcalendarioMensual()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_CrearcalendarioMensual");
        }
    
        public virtual ObjectResult<USP_DetalleS_Result> USP_DetalleS(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DetalleS_Result>("USP_DetalleS", iDParameter);
        }
    
        public virtual ObjectResult<USP_ESTADISTICAS_SERVICIOS_Result> USP_ESTADISTICAS_SERVICIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ESTADISTICAS_SERVICIOS_Result>("USP_ESTADISTICAS_SERVICIOS");
        }
    
        public virtual ObjectResult<USP_RE_RANGOFECHA_Result> USP_RE_RANGOFECHA(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RE_RANGOFECHA_Result>("USP_RE_RANGOFECHA", fecha1Parameter, fecha2Parameter);
        }
    
        public virtual int uspActualizaVideoPrincipal(Nullable<int> codCurso)
        {
            var codCursoParameter = codCurso.HasValue ?
                new ObjectParameter("CodCurso", codCurso) :
                new ObjectParameter("CodCurso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspActualizaVideoPrincipal", codCursoParameter);
        }
    
        public virtual ObjectResult<uspMuestraEstudiantesMatriculados_Result> uspMuestraEstudiantesMatriculados(Nullable<int> codCurso)
        {
            var codCursoParameter = codCurso.HasValue ?
                new ObjectParameter("CodCurso", codCurso) :
                new ObjectParameter("CodCurso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspMuestraEstudiantesMatriculados_Result>("uspMuestraEstudiantesMatriculados", codCursoParameter);
        }
    
        public virtual ObjectResult<Nullable<System.TimeSpan>> uspObtieneDuracionCurso(Nullable<int> idCurso)
        {
            var idCursoParameter = idCurso.HasValue ?
                new ObjectParameter("IdCurso", idCurso) :
                new ObjectParameter("IdCurso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.TimeSpan>>("uspObtieneDuracionCurso", idCursoParameter);
        }
    
        public virtual ObjectResult<uspReporteVideos_Result> uspReporteVideos(Nullable<System.DateTime> finicio, Nullable<System.DateTime> fecahfin)
        {
            var finicioParameter = finicio.HasValue ?
                new ObjectParameter("finicio", finicio) :
                new ObjectParameter("finicio", typeof(System.DateTime));
    
            var fecahfinParameter = fecahfin.HasValue ?
                new ObjectParameter("fecahfin", fecahfin) :
                new ObjectParameter("fecahfin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReporteVideos_Result>("uspReporteVideos", finicioParameter, fecahfinParameter);
        }
    }
}
